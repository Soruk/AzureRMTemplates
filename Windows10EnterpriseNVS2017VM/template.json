{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmSize": {
            "defaultValue": "Standard_D4s_v3",
            "allowedValues": ["Standard_B2s", "Standard_D2s_v3", "Standard_D4s_v3"],
            "type": "string",
            "metadata": {
              "description": "Type size of deployed App VM."
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "defaultValue": "dev",
            "metadata": {
                "description": "Type VM admin user name."
            }
        },
        "vmAdminPassword": {
            "type": "securestring",
            "defaultValue": null,
            "metadata": {
                "description": "Type VM admin password."
            }
        },
        "vmStorageType": {
            "defaultValue": "Premium",
            "allowedValues": ["Premium", "Standard"],
            "type": "string",
            "metadata": {
              "description": "Type type of starage SSD ['Premium'] or HDD ['Standard']."
            }
        }
    },
    "variables": {
        "vmName": "[concat('winvs-', parameters('vmAdminUsername'), '-vm')]",        
        "vnetName": "[concat(parameters('vmAdminUsername'),'-vnet')]",
        "vnetAddressPrefix":"192.168.128.0/24",
        "subnetDefaultName": "default",
        "subnetDefaultAddressPrefix":"192.168.128.0/26",        
        "subnetVMName": "vm-subnet",   
        "subnetVMAddressPrefix":"192.168.128.192/26",
        "vmNicName": "[concat(variables('vmName'), '-nic')]",
        "storageAccountDiagnosticName": "[concat(parameters('vmAdminUsername'), 'diagv2')]",
        "publicIPAddressVMName": "[concat(variables('vmName'), '-pip')]",
        "networkSecurityGroupVMName": "[concat(variables('vmName'), '-nsg')]",
        "securityRuleAllowRdpName": "default-allow-rdp",
        "scheduleShutdwonVMName": "[concat(variables('vmName'), '-autoShutdown')]",
        "autoShutDownVMTime": 1800
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftVisualStudio",
                        "offer": "VisualStudio",
                        "sku": "VS-2017-Ent-Latest-Win10-N",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(variables('vmName'),'-osDisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "[concat(parameters('vmStorageType'),'_LRS')]"
                        },
                        "diskSizeGB": 255
                    },
                    "dataDisks": [{
                        "lun": 0,
                        "name": "[concat(variables('vmName'),'-dataDisk')]",
                        "createOption": "Empty",
                        "caching": "ReadOnly",
                        "managedDisk": {
                          "storageAccountType": "[concat(parameters('vmStorageType'),'_LRS')]"
                        },
                        "diskSizeGB": 127
                      }]
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('vmAdminUsername')]",
                    "adminPassword": "[parameters('vmAdminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "timeZone": "Romance Standard Time" 
                    },
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https', '://', variables('storageAccountDiagnosticName'), '.blob.core.windows.net', '/')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountDiagnosticName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vmNicName')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('vmName'),'-ipc')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressVMName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetVMName'))]"
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupVMName'))]"
                },
                "primary": true,
                "virtualMachine": {
                    "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressVMName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetVMName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupVMName'))]"              
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupVMName')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "securityRules": [
                    {
                        "name": "[variables('securityRuleAllowRdpName')]",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                         "properties": {
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                         "properties": {
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                             "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                         "properties": {
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "etag": "W/\"d0b023cd-5058-4454-a65b-7fd6314f51e3\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                         "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {           
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressVMName')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[replace(variables('publicIPAddressVMName'),'-','')]",
                    "fqdn": "[concat(replace(variables('publicIPAddressVMName'),'-',''), resourceGroup().location,'.cloudapp.azure.com')]"
                  }
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetDefaultName')]",
                        "properties": {
                          "addressPrefix": "[variables('subnetDefaultAddressPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnetVMName')]",
                        "properties": {
                          "addressPrefix": "[variables('subnetVMAddressPrefix')]"
                        }
                    }
                ],
                "virtualNetworkPeerings": []
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(variables('vnetName'), '/', variables('subnetDefaultName'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
              "addressPrefix": "[variables('subnetDefaultAddressPrefix')]"
            },
            "dependsOn": [
              "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(variables('vnetName'), '/', variables('subnetVMName'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
              "addressPrefix": "[variables('subnetVMAddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupVMName'))]"
              }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
              "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupVMName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
              "name": "Standard_LRS",
              "tier": "Standard"
            },
            "kind": "StorageV2",
            "name": "[variables('storageAccountDiagnosticName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
              "networkAcls": {
                "bypass": "AzureServices",
                "virtualNetworkRules": [],
                "ipRules": [],
                "defaultAction": "Allow"
              },
              "encryption": {
                "services": {
                  "file": {
                    "enabled": true
                  },
                  "blob": {
                    "enabled": true
                  }
                },
                "keySource": "Microsoft.Storage"
              }
            },         
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "name": "[concat(variables('networkSecurityGroupVMName'), '/', variables('securityRuleAllowRdpName'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupVMName'))]"
            ]
        }
    ]
}